# Transversal parameters for all profiles
server:
  port: 8081
  servlet:
    context-path: /blossom-app

spring:
  application:
    name: blossom-app
  data:
    redis:
      repositories:
        enabled: false

# AWS libraries, Configuration and Logging
logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: ERROR
        internal:
          InstanceMetadataServiceResourceFetcher: ERROR

cloud:
  aws:
    region:
      static: us-east-1
      auto: false
    stack:
      auto: false

# OpenApi configuration
springdoc:
  swagger-ui:
    defaultModelsExpandDepth: -1
    operations-sorter: method
    tags-sorter: alpha

# Parametrización de endpoints de Spring Boot Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

info:
  app:
    version: '@project.version@'

---
# local profile
spring:
  config:
    activate:
      on-profile: local
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  datasource:
    username: admin
    url: jdbc:mysql://dev-database.testfacte.com:3306/test?zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&useUnicode=true&useSSL=false
    password: admin123
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    web:
      pageable:
        default-page-size: 100
        max-page-size: 100
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

security:
  allowed-uris: /swagger-ui/**,/v3/api-docs/**,/actuator/health/**,/favicon.ico,/actuator/info/**
  allowed-origins: http://localhost:4200
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS,HEAD
  allowed-headers: Authorization,content-type,x-auth-token

logging:
  level:
    org:
      hibernate:
        SQL: INFO
---
# Parámetros usados cuando el perfil es dev, qa, demo o prod
# Los valores de los parámetros se obtienen de AWS Parameter Store de acuerdo al perfil
spring:
  config:
    activate:
      on-profile:
        - test
    import:
      - aws-parameterstore:/config/application_${spring.profiles.active}/;/config/${spring.application.name}_${spring.profiles.active}/